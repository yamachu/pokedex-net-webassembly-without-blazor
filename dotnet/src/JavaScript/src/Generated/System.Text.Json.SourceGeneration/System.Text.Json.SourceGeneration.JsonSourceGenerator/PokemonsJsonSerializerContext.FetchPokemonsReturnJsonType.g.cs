// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0618

    public partial class MyClass
    {

        internal partial class PokemonsJsonSerializerContext
        {
            private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::MyClass.FetchPokemonsReturnJsonType>? _FetchPokemonsReturnJsonType;
            /// <summary>
            /// Defines the source generated JSON serialization contract metadata for a given type.
            /// </summary>
            public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::MyClass.FetchPokemonsReturnJsonType> FetchPokemonsReturnJsonType
            {
                get => _FetchPokemonsReturnJsonType ??= Create_FetchPokemonsReturnJsonType(Options, makeReadOnly: true);
            }
            
            private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::MyClass.FetchPokemonsReturnJsonType> Create_FetchPokemonsReturnJsonType(global::System.Text.Json.JsonSerializerOptions options, bool makeReadOnly)
            {
                global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::MyClass.FetchPokemonsReturnJsonType>? jsonTypeInfo = null;
                global::System.Text.Json.Serialization.JsonConverter? customConverter;
                if (options.Converters.Count > 0 && (customConverter = GetRuntimeProvidedCustomConverter(options, typeof(global::MyClass.FetchPokemonsReturnJsonType))) != null)
                {
                    jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateValueInfo<global::MyClass.FetchPokemonsReturnJsonType>(options, customConverter);
                }
                else
                {
                    global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::MyClass.FetchPokemonsReturnJsonType> objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::MyClass.FetchPokemonsReturnJsonType>()
                    {
                        ObjectCreator = null,
                        ObjectWithParameterizedConstructorCreator = static (args) => new global::MyClass.FetchPokemonsReturnJsonType((global::PokedexNetWebassembly.Shared.Pokemon[])args[0]),
                        PropertyMetadataInitializer = _ => FetchPokemonsReturnJsonTypePropInit(options),
                        ConstructorParameterMetadataInitializer = FetchPokemonsReturnJsonTypeCtorParamInit,
                        NumberHandling = default,
                        SerializeHandler = FetchPokemonsReturnJsonTypeSerializeHandler
                    };
            
                    jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::MyClass.FetchPokemonsReturnJsonType>(options, objectInfo);
                }
            
                if (makeReadOnly)
                {
                    jsonTypeInfo.MakeReadOnly();
                }
            
                return jsonTypeInfo;
            }
            
            private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] FetchPokemonsReturnJsonTypePropInit(global::System.Text.Json.JsonSerializerOptions options)
            {
                global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[2];
            
                global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Type> info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Type>()
                {
                    IsProperty = true,
                    IsPublic = false,
                    IsVirtual = true,
                    DeclaringType = typeof(global::MyClass.FetchPokemonsReturnJsonType),
                    Converter = null,
                    Getter = null,
                    Setter = null,
                    IgnoreCondition = null,
                    HasJsonInclude = false,
                    IsExtensionData = false,
                    NumberHandling = default,
                    PropertyName = "EqualityContract",
                    JsonPropertyName = null
                };
            
                global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo propertyInfo0 = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Type>(options, info0);
                properties[0] = propertyInfo0;
            
                global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::PokedexNetWebassembly.Shared.Pokemon[]> info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::PokedexNetWebassembly.Shared.Pokemon[]>()
                {
                    IsProperty = true,
                    IsPublic = true,
                    IsVirtual = false,
                    DeclaringType = typeof(global::MyClass.FetchPokemonsReturnJsonType),
                    Converter = null,
                    Getter = static (obj) => ((global::MyClass.FetchPokemonsReturnJsonType)obj).Pokemons!,
                    Setter = static (obj, value) => throw new global::System.InvalidOperationException("Deserialization of init-only properties is currently not supported in source generation mode."),
                    IgnoreCondition = null,
                    HasJsonInclude = false,
                    IsExtensionData = false,
                    NumberHandling = default,
                    PropertyName = "Pokemons",
                    JsonPropertyName = null
                };
            
                global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo propertyInfo1 = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::PokedexNetWebassembly.Shared.Pokemon[]>(options, info1);
                properties[1] = propertyInfo1;
            
                return properties;
            }
            
            // Intentionally not a static method because we create a delegate to it. Invoking delegates to instance
            // methods is almost as fast as virtual calls. Static methods need to go through a shuffle thunk.
            private void FetchPokemonsReturnJsonTypeSerializeHandler(global::System.Text.Json.Utf8JsonWriter writer, global::MyClass.FetchPokemonsReturnJsonType? value)
            {
                if (value == null)
                {
                    writer.WriteNullValue();
                    return;
                }
            
                writer.WriteStartObject();
                writer.WritePropertyName(PropName_pokemons);
                PokemonArraySerializeHandler(writer, ((global::MyClass.FetchPokemonsReturnJsonType)value).Pokemons!);
            
                writer.WriteEndObject();
            }
            
            private static global::System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[] FetchPokemonsReturnJsonTypeCtorParamInit()
            {
                global::System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[] parameters = new global::System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[1];
                global::System.Text.Json.Serialization.Metadata.JsonParameterInfoValues info;
            
                info = new()
                {
                    Name = "Pokemons",
                    ParameterType = typeof(global::PokedexNetWebassembly.Shared.Pokemon[]),
                    Position = 0,
                    HasDefaultValue = false,
                    DefaultValue = default(global::PokedexNetWebassembly.Shared.Pokemon[])
                };
                parameters[0] = info;
            
                return parameters;
            }
        }
}
