// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0618

    public partial class MyClass
    {

        internal partial class PokemonsJsonSerializerContext
        {
            private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Type>? _Type;
            /// <summary>
            /// Defines the source generated JSON serialization contract metadata for a given type.
            /// </summary>
            public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Type> Type
            {
                get => _Type ??= Create_Type(Options, makeReadOnly: true);
            }
            
            private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Type> Create_Type(global::System.Text.Json.JsonSerializerOptions options, bool makeReadOnly)
            {
                global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Type>? jsonTypeInfo = null;
                global::System.Text.Json.Serialization.JsonConverter? customConverter;
                if (options.Converters.Count > 0 && (customConverter = GetRuntimeProvidedCustomConverter(options, typeof(global::System.Type))) != null)
                {
                    jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateValueInfo<global::System.Type>(options, customConverter);
                }
                else
                {
                    jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateValueInfo<global::System.Type>(options, global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.GetUnsupportedTypeConverter<global::System.Type>());
                }
            
                if (makeReadOnly)
                {
                    jsonTypeInfo.MakeReadOnly();
                }
            
                return jsonTypeInfo;
            }
            
        }
}
